geom_text(hjust = 0, nudge_x = .003)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("haven")
library(haven)
library(tidyverse)
library(lattice)
library(car)
data_dir <- "~/github_repos/CatSpeed/cache"
load("~/github_repos/CatSpeed/cache/sgp_final_dataframe_oct2020.RData")
cat_all_analyze <- cat_all %>%
rename(acc = correct) %>%
mutate(
stim_fac = factor(stim), #for dummy coding
stim = dplyr::recode(stim, `neu` = 0, `neg` = -1, `pos` = 1) #for linear coding
) %>%
group_by(subj_idx, blocknum) %>%
dplyr::mutate(
Val_use_lag = dplyr::lag(Val_use, 1, order_by = trial),
Ar_use_lag = dplyr::lag(Ar_use, 1, order_by = trial),
rt_lag = dplyr::lag(rt, 1, order_by = trial),
acc_lag = dplyr::lag(acc, 1, order_by = trial)
) %>%
group_by(stim_fac) %>%
mutate(
Ar_use_stimcent = Ar_use - mean(Ar_use, na.rm = T), #valence relative to stimulus category
Val_use_stimcent = Val_use - mean(Val_use, na.rm = T)
) %>%
ungroup() %>%
dplyr::mutate(
rt_lag_z = as.vector(scale(rt_lag)), # z-score at dataset level
rt_log = log10(rt), # re-compute with more reasonable scaling
Ar_use_z = as.vector(scale(Ar_use, scale = TRUE)), # MNH: changed to TRUE for z-scoring simpler)
Val_use_z = as.vector(scale(Val_use, scale = TRUE)),
trial_z = as.vector(scale(trial)),
abs_Val_use_z = as.vector(scale(abs(Val_use - 5), scale = TRUE)), # absolute valence more like salience) -- 5 is midpoint
) %>%
filter(!is.na(rt) & !wordType %in% c("friend", "work", "romance")) #drop missed trials and RAPFA post-lagging
all_acc <- cat_all_analyze %>% dplyr::filter(acc == 1) %>% dplyr::filter(!is.na(Val_use_z)) %>% dplyr::filter(subj_idx == 7032)
all_acc$obs <- rownames(all_acc)
#Data taken from CatSpeed_pipeline_cleaning
library(lm.beta)
library(ppcor)
library(ggplot2)
### initial model with outlier diagnostics ###
fit <- lm(rt_inv ~ Val_use_z + Ar_use_z + trial_z, data = all_acc)
summary(fit)
all_acc$resid <- fit$residuals #Creating a variable "resid" with the raw residuals from "fit"
all_acc$predicted <- fit$fitted.values #Creating a variable "predicted" with the fitted/predicted values from "fit"
all_acc$stud.resid <- rstudent(fit) #Creating a variable "stud.resid" that computes the standardized deleted residuals from "fit"
all_acc$stand.resid <- rstandard(fit) #Creating a variable "stand.resid" that computes the standardized residuals from "fit"
all_acc$hat <- hatvalues(fit) #Creating a variable "hat" that computed the hat values from "fit"
avPlots(fit) #All at the same time
avPlot(fit, "Val_use_z")
#Doing the same thing manually
all_acc$rt.res  <- lm(rt_inv ~ Ar_use_z + trial_z, data = all_acc)$residuals
all_acc$val.res <- lm(Val_use_z ~ Ar_use_z + trial_z, data = all_acc)$residuals
summary(lm(val.res ~ rt.res, data = all_acc)) #Check that slope
summary(fit) #See that that slope is the same as the slope in "fit" for age
ggplot(all_acc, aes(y = val.res, x = rt.res)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
#Normality of residuals
hist(all_acc$resid) #We can use a histogram to look at the normality of the residuals
#These look pretty normal, but think about bin widths here
qqPlot(fit, main="QQ Plot") #In the "car" package
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
Thesis <- read_sav("~/github_repos/Statistics_831/Income35.sav")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(aov)
library(anova)
library(Anova)
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(car)
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
t.test(runtime ~ male, data = data, var.equal = TRUE)
View(data)
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(0,1))
table(data$smoke) #As an integer
table(data$smoke_f) #As a factor with labels
t.test(IncomeK ~ Sex, data = data, var.equal = TRUE)
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(0,1))
table(data$Sex) #As an integer
table(data$Sex) #As a factor with labels
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(car)
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(0,1))
table(data$Sex) #As an integer
table(data$Sex) #As a factor with labels
table(data$Sex) #As a factor with labels
t.test(IncomeK ~ Sex, data = data, var.equal = TRUE)
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c("0","1"))
table(data$Sex) #As an integer
table(data$Sex) #As a factor with labels
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(car)
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
data <- data %>% dplyr::mutate(SexDummy, factor(Sex), labels = c("Male", "Female"), levels = c(0,1))
data %>% dplyr::mutate(SexDummy, factor(Sex), labels = c("Male", "Female"), levels = c(0,1))
data <- data %>% dplyr::recode(Sex, factor(Sex), labels = c("0", "1"), levels = c(1,2))
dplyr::recode(Sex, factor(Sex), labels = c("0", "1"), levels = c(1,2))
data %>% dplyr::recode(Sex, factor(Sex), labels = c("0", "1"), levels = c(1,2))
data <- data %>% dplyr::recode(Sex, 1 = 0,
data <- data %>% dplyr::recode(Sex, 1 == 0,
2 == 1)
data %>% dplyr::recode(Sex, 1 == 0,
2 == 1)
class(data)
data %>% dplyr::recode(Sex, 1 == 0,
2 == 1)
library(tidyverse)
library(dplyr)
data %>% dplyr::recode(Sex, 1 == 0,
2 == 1)
data$Sex <- factor(data$smoke, labels = c("Male", "Female"), levels = c(1,2))
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(1,2))
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(0,1))
table(data$Sex) #As an integer
table(data$Sex) #As a factor with labels
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(1,2))
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(0,1))
table(data$Sex) #As an integer
table(data$Sex) #As a factor with labels
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(1,2))
data$Sex <- factor(data$Sex, labels = c("Male", "Female"), levels = c(0,1))
table(data$Sex) #As an integer
table(data$Sex) #As a factor with labels
t.test(IncomeK ~ Sex, data = data, var.equal = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven)
library(car)
data <- read_sav("~/github_repos/Statistics_831/Income35.sav")
data <- data %>%
mutate(previous = case_when(Sex == 1 ~ 1,
TRUE ~0),
never = case_when(Sex == 2 ~ 1,
TRUE ~0))
table(data$Sex) #As an integer
data <- data %>%
mutate(previous = case_when(Sex == 1 ~ 0,
TRUE ~0),
never = case_when(Sex == 2 ~ 1,
TRUE ~0))
data <- data %>%
mutate(SexDummyM = case_when(Sex == 1 ~ 0,
TRUE ~0),
SexDummyF = case_when(Sex == 2 ~ 1,
TRUE ~0))
data %>% select(-c(SexDummyF, previous, never)
data <- data %>% select(-c(SexDummyF, previous, never)
data <- data %>% select(-c(SexDummyF, previous, never))
table(data$SexDummyM) #As an integer
table(data$Sex)DummyM #As a factor with labels
table(data$SexDummyM) #As a factor with labels
data$smoke_f <- factor(data$SexDummyM, labels = c("Male", "Female"), levels = c(0,1))
table(data$SexDummyM) #As an integer
table(data$SexDummyM) #As a factor with labels
t.test(IncomeK ~ Sex, data = data, var.equal = TRUE)
summary(lm(runtime ~ male, data = data))
data <- data %>%
mutate(SexDummyM = case_when(Sex == 1 ~ 0,
TRUE ~0))
data$smoke_f <- factor(data$SexDummyM, labels = c("Male", "Female"), levels = c(0,1))
table(data$SexDummyM) #As an integer
table(data$SexDummyM) #As a factor with labels
t.test(IncomeK ~ SexDummyM, data = data, var.equal = TRUE)
data <- data %>%
mutate(SexDummyM = case_when(Sex == 1 ~ 0,
TRUE ~1))
data$SexDummyM <- factor(data$SexDummyM, labels = c("Male", "Female"), levels = c(0,1))
table(data$SexDummyM) #As an integer
table(data$SexDummyM) #As a factor with labels
t.test(IncomeK ~ SexDummyM, data = data, var.equal = TRUE)
summary(lm(IncomeK ~ SexDummyM, data = data))
library(easystats)
library(report)
ttest <- t.test(IncomeK ~ SexDummyM, data = data, var.equal = TRUE)
report(ttest)
reg <- summary(lm(IncomeK ~ SexDummyM, data = data))
report(reg)
reg <- lm(IncomeK ~ SexDummyM, data = data)
report(reg)
t.test(IncomeK ~ SexDummyM, data = data, var.equal = TRUE)
reg <- lm(IncomeK ~ SexDummyM, data = data)
summary(reg)
summary(ttest)
t.test(IncomeK ~ SexDummyM, data = data, var.equal = TRUE)
data <- data %>%
mutate(C1 = case_when(Job == 5 ~ 1,
Job == 6 ~ 0,
Job == 7 ~ -1,
TRUE ~0))
data$SexDummyM <- factor(data$C1, labels = c("Private", "Government", "Self-Employed"), levels = c(1,0,-1))
data$C1 <- factor(data$C1, labels = c("Private", "Government", "Self-Employed"), levels = c(1,0,-1))
summary(lm(runtime ~ C1 data = data))
summary(lm(IncomeK ~ C1 data = data))
summary(lm(IncomeK ~ C1, data = data))
data <- data %>%
mutate(C1 = case_when(Job == 5 ~ 1,
Job == 6 ~ 0,
Job == 7 ~ -1,
TRUE ~0)) %>%
mutate(C2 = case_when(Job == 5 ~ 0,
Job == 6 ~ 1,
Job == 7 ~ -1,
TRUE ~0))
data$C1 <- factor(data$C1, labels = c("Private", "Government", "Self-Employed"), levels = c(1,0,-1))
data$C2 <- factor(data$C2, labels = c("Private", "Government", "Self-Employed"), levels = c(0,1,-1))
summary(lm(IncomeK ~ C1 + C2, data = data))
Income.aov = aov(IncomeK ~ C1, data = data)
summary(Income.aov)
summary(lm(IncomeK ~ C1 + C2, data = data))
Income.aov = aov(IncomeK ~ C1, data = data)
summary(Income.aov)
summary(lm(IncomeK ~ C1, data = data))
Income.aov = aov(IncomeK ~ C1, data = data)
summary(Income.aov)
results(Income.aov)
report(Income.aov)
summary(lm(IncomeK ~ C1, data = data))
summary(Income.aov)
summary(lm(IncomeK ~ C1, data = data))
table(data$Job) #As a factor with labels
table(data$Job) #As a factor with labels
table(data$Job) #As an integer
table(mean(data$Job)) #As a factor with labels
table(data$Job) #As a factor with labels
print(model.tables(Income.aov,"means"))
print(model.tables(Income.aov,"means"))
summary(lm(IncomeK ~ C1 + C2, data = data))
Income.aov = aov(IncomeK ~ C1 +C2, data = data)
summary(Income.aov)
summary(lm(IncomeK ~ C1 +C2, data = data))
print(model.tables(Income.aov,"means"))
data <- data %>%
mutate(C1 = case_when(Job == 5 ~ 1,
Job == 6 ~ 0,
Job == 7 ~ -1,
TRUE ~0)) %>%
mutate(C2 = case_when(Job == 5 ~ 1,
Job == 6 ~ -1,
Job == 7 ~ 0,
TRUE ~0))
data$C1 <- factor(data$C1, labels = c("Private", "Government", "Self-Employed"), levels = c(1,0,-1))
summary(lm(IncomeK ~ C1 + C2, data = data))
Income.aov = aov(IncomeK ~ C1 +C2, data = data)
data <- data %>%
mutate(C1 = case_when(Job == 5 ~ 1,
Job == 6 ~ 0,
Job == 7 ~ -1,
TRUE ~0)) %>%
mutate(C2 = case_when(Job == 5 ~ 1,
Job == 6 ~ -1,
Job == 7 ~ 0,
TRUE ~0))
data$C1 <- factor(data$C1, labels = c("Private", "Government", "Self-Employed"), levels = c(1,0,-1))
data$C2 <- factor(data$C1, labels = c("Private", "Government", "Self-Employed"), levels = c(0,1,-1))
data <- data %>%
mutate(C1 = case_when(Job == 5 ~ 1,
Job == 6 ~ 0,
Job == 7 ~ -1,
TRUE ~0)) %>%
mutate(C2 = case_when(Job == 5 ~ 1,
Job == 6 ~ -1,
Job == 7 ~ 0,
TRUE ~0))
data <- data %>%
mutate(c1 = case_when(Education == 1 ~ -1/2,
Education == 2 ~ -1/2,
Education == 3 ~ 1,
Education == 4 ~ 0,
Education == 5 ~ 0,
Education == 6 ~ 0,
TRUE ~0),
c2 = case_when(Education == 1 ~ -1/4,
Education == 2 ~ -1/4,
Education == 3 ~ -1/4,
Education == 4 ~ -1/4,
Education == 5 ~ 1/2,
Education == 6 ~ 1/2,
TRUE ~0),
c3 = case_when(Education == 1 ~ -1/5,
Education == 2 ~ -1/5,
Education == 3 ~ -1/5,
Education == 4 ~ -1/5,
Education == 5 ~ -1/5,
Education == 6 ~ 1,
TRUE ~0)),
data <- data %>%
mutate(c1 = case_when(Education == 1 ~ -1/2,
Education == 2 ~ -1/2,
Education == 3 ~ 1,
Education == 4 ~ 0,
Education == 5 ~ 0,
Education == 6 ~ 0,
TRUE ~0),
c2 = case_when(Education == 1 ~ -1/4,
Education == 2 ~ -1/4,
Education == 3 ~ -1/4,
Education == 4 ~ -1/4,
Education == 5 ~ 1/2,
Education == 6 ~ 1/2,
TRUE ~0),
c3 = case_when(Education == 1 ~ -1/5,
Education == 2 ~ -1/5,
Education == 3 ~ -1/5,
Education == 4 ~ -1/5,
Education == 5 ~ -1/5,
Education == 6 ~ 1,
TRUE ~0))
data <- data %>%
mutate(c1 = case_when(Education == 1 ~ -1/2,
Education == 2 ~ -1/2,
Education == 3 ~ 1,
Education == 4 ~ 0,
Education == 5 ~ 0,
Education == 6 ~ 0,
TRUE ~0),
c2 = case_when(Education == 1 ~ -1/4,
Education == 2 ~ -1/4,
Education == 3 ~ -1/4,
Education == 4 ~ -1/4,
Education == 5 ~ 1/2,
Education == 6 ~ 1/2,
TRUE ~0),
c3 = case_when(Education == 1 ~ -1/5,
Education == 2 ~ -1/5,
Education == 3 ~ -1/5,
Education == 4 ~ -1/5,
Education == 5 ~ -1/5,
Education == 6 ~ 1,
TRUE ~0))
summary(lm(IncomeK ~ c1 + c2 + c3, data = data))
summary(lm(IncomeK ~ c1 + c2 + c3, data = data))
lm <- summary(lm(IncomeK ~ c1 + c2 + c3, data = data))
report(lm)
lm <- lm(IncomeK ~ c1 + c2 + c3, data = data)
report(lm)
data <- data %>%
mutate(c1 = case_when(Education == 1 ~ -1/2,
Education == 2 ~ 1/2,
Education == 3 ~ 1,
Education == 4 ~ 0,
Education == 5 ~ 0,
Education == 6 ~ 0,
TRUE ~0),
c2 = case_when(Education == 1 ~ -1/4,
Education == 2 ~ -1/4,
Education == 3 ~ -1/4,
Education == 4 ~ -1/4,
Education == 5 ~ 1/2,
Education == 6 ~ 1/2,
TRUE ~0),
c3 = case_when(Education == 1 ~ -1/5,
Education == 2 ~ -1/5,
Education == 3 ~ -1/5,
Education == 4 ~ -1/5,
Education == 5 ~ -1/5,
Education == 6 ~ 1,
TRUE ~0))
lm <- lm(IncomeK ~ c1 + c2 + c3, data = data)
report(lm)
lm <- lm(IncomeK ~ c1 + c2 + c3, data = data)
report(lm)
lm <- lm(IncomeK ~ c1 + c2 + c3, data = data)
summary(lm)
report(lm)
summary(Income.aov)
summary(lm(IncomeK ~ C1, data = data))
print(model.tables(Income.aov,"means"))
bpd <- c(rnorm(100, mean = 30, sd = 15))
simulate_anxiety <- c(rnorm(100, mean = 28, sd = 20))
data_frame <- cbind(bpd, simulate_anxiety)
plot(data_frame)
bpd <- c(rnorm(100, mean = 15, sd = 15))
simulate_anxiety <- c(rnorm(100, mean = 28, sd = 20))
bpd <- c(rnorm(100, mean = 15, sd = 15))
simulate_anxiety <- c(rnorm(100, mean = 28, sd = 20))
data_frame <- cbind(bpd, simulate_anxiety)
plot(data_frame)
bpd <- c(rnorm(100, mean = 15, sd = 15))
simulate_anxiety <- c(rnorm(100, mean = 28, sd = 10))
data_frame <- cbind(bpd, simulate_anxiety)
plot(data_frame)
bpd <- c(rnorm(100, mean = 40, sd = 15))
simulate_anxiety <- c(rnorm(100, mean = 28, sd = 10))
data_frame <- cbind(bpd, simulate_anxiety)
plot(data_frame)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, ggplot2, simr, lme4, pwr, powerMediation, effectsize, dependlab, wrapr, rprime)
setwd("~/github_repos/PUBS/Reversal_simulation/")
data_dir <- "~/github_repos/PUBS/Reversal_simulation/data_txt"
source("q_learning_functions.R")
source("helper_functions_MLMpower.R")
#load("outcomes_2.Rdata")
#outcomes_2 <- outcomes
#load("outcomes.Rdata")
effect_size <- convert_d_to_r(.28, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size)
effect_size_2 <- convert_d_to_r(.32, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size_2)
effect_size^2
effect_size_2^2
effect_size <- convert_d_to_r(.61, log = FALSE)
effect_size^2
library(easystats)
library("easystats")
library(effectsize)
t_to_d(3.42, 56, paired = TRUE, ci = 0.95, pooled, ...)
t_to_d(3.42, 56, paired = TRUE, ci = 0.95, pooled)
t_to_d(3.42, 56, paired = TRUE, ci = 0.95)
t_to_d(2.11, 56, paired = TRUE, ci = 0.95)
t_to_d(t=3.92, 56, paired = TRUE, ci = 0.95)
effect_size <- d_to_r(.46, log = FALSE)
pwr.r.test(power = .8, r = effect_size)
effect_size <- convert_d_to_r(.46, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size)
effect_size <- convert_d_to_r(.42, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size)
0.2055172^2
effect_size <- convert_d_to_r(.28, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size)
effect_size^2
effect_size_2^2
d_to_r(.42, log = FALSE)
effect_size_2 <- convert_d_to_r(.32, log = FALSE)
#
effect_size_2 <- convert_d_to_r(.32, log = FALSE)
effect_size_2
effect_size <- convert_d_to_r(.28, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size)
effect_size_2 <- convert_d_to_r(.32, log = FALSE)
#
pwr.r.test(power = .8, r = effect_size_2)
effect_size <- d_to_r(.42, log = FALSE)
pwr.r.test(power = .8, r = effect_size)
effect_size <- d_to_r(.42, log = FALSE)
pwr.r.test(power = .8, r = effect_size)
read_csv("Downloads/dtk_psu_msgs.csv")
read.csv("Downloads/dtk_psu_msgs.csv")
Dtk<- read.csv("Downloads/dtk_psu_msgs.csv")
colnames(DtK)
colnames(Dtk)
unique(DtK$text)
unique(Dtk$text)
View(Dtk)
install.packages("circular")
library(circular)
library(circular)
library(tidyverse)
n = 10000
mu = 0
kappa=  10
vonmises <- rvonmises(n, mu, kappa, control.circular=list())
vonmises_reorient_df  <- data.frame(vonmises_orig = as.vector(vonmises)) %>% mutate(vonmises_altered = if_else(vonmises_orig > 180, vonmises_orig -360, vonmises_orig))
hist(as.vector(vonmises_reorient_df$vonmises_altered))
sd(vonmises_reorient_df$vonmises_altered)
hist(rnorm(n, mean = 0, sd = 18.75569))
n = 10000
mu = 0
kappa=  15
vonmises <- rvonmises(n, mu, kappa, control.circular=list())
vonmises_reorient_df  <- data.frame(vonmises_orig = as.vector(vonmises)) %>% mutate(vonmises_altered = if_else(vonmises_orig > 180, vonmises_orig -360, vonmises_orig))
hist(as.vector(vonmises_reorient_df$vonmises_altered))
sd(vonmises_reorient_df$vonmises_altered)
hist(rnorm(n, mean = 0, sd = 18.75569))
sd(vonmises_reorient_df$vonmises_altered)
n = 10000
mu = 0
kappa=  10
vonmises <- rvonmises(n, mu, kappa, control.circular=list())
vonmises_reorient_df  <- data.frame(vonmises_orig = as.vector(vonmises)) %>% mutate(vonmises_altered = if_else(vonmises_orig > 180, vonmises_orig -360, vonmises_orig))
hist(as.vector(vonmises_reorient_df$vonmises_altered))
sd(vonmises_reorient_df$vonmises_altered)
hist(rnorm(n, mean = 0, sd = 18.75569))
sd(vonmises_reorient_df$vonmises_altered)
vonmises <- rvonmises(n, mu, kappa, control.circular=list())
plot(vonmises)
library(tidyverse)
setwd("~/github_repos/Cannon_Task_Inquisit/Data/")
getwd()
library(readr)
pubs_pilot_cannon_task_forpilot_6_30_21_raw_21_07_12 <- read_csv("pubs_pilot_cannon_task_forpilot_6.30.21_raw_21_07_12.csv")
View(pubs_pilot_cannon_task_forpilot_6_30_21_raw_21_07_12)
n = 10000
mu = 0
kappa = 30
vonmises <- rvonmises(n, mu, kappa, control.circular=list())
plot(vonmises)
vonmises_reorient_df  <- data.frame(vonmises_orig = as.vector(vonmises)) %>% mutate(vonmises_altered = if_else(vonmises_orig > 180, vonmises_orig -360, vonmises_orig))
hist(as.vector(vonmises_reorient_df$vonmises_altered))
sd(vonmises_reorient_df$vonmises_altered)
hist(rnorm(n, mean = 0, sd = 18.75569))
plot(vonmises)
